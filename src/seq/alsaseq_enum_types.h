#ifndef __ALSA_GOBJECT_ALSASEQ_ENUM_TYPES__H__
#define __ALSA_GOBJECT_ALSASEQ_ENUM_TYPES__H__

#include <sound/asequencer.h>

typedef enum {
    ALSASEQ_CLIENT_NUMBER_ENUM_SYSTEM   = SNDRV_SEQ_CLIENT_SYSTEM,
    ALSASEQ_CLIENT_NUMBER_ENUM_DUMMY    = SNDRV_SEQ_CLIENT_DUMMY,
    ALSASEQ_CLIENT_NUMBER_ENUM_OSS      = SNDRV_SEQ_CLIENT_OSS,
} ALSASeqClientNumberEnum;

typedef enum {
    ALSASEQ_CLIENT_TYPE_ENUM_NO_CLIENT      = NO_CLIENT,
    ALSASEQ_CLIENT_TYPE_ENUM_USER_CLIENT    = USER_CLIENT,
    ALSASEQ_CLIENT_TYPE_ENUM_KERNEL_CLIENT  = KERNEL_CLIENT,
} ALSASeqClientTypeEnum;

typedef enum {
    ALSASEQ_CLIENT_FILTER_FLAG_BROADCAST    = SNDRV_SEQ_FILTER_BROADCAST,
    ALSASEQ_CLIENT_FILTER_FLAG_MULTICAST    = SNDRV_SEQ_FILTER_MULTICAST,
    ALSASEQ_CLIENT_FILTER_FLAG_BOUNCE       = SNDRV_SEQ_FILTER_BOUNCE,
    ALSASEQ_CLIENT_FILTER_FLAG_USE_EVENT    = SNDRV_SEQ_FILTER_USE_EVENT,
} ALSASeqClientFilterFlag;

typedef enum {
    ALSASEQ_PORT_NUMBER_ENUM_SYSTEM = SNDRV_SEQ_CLIENT_SYSTEM,
    ALSASEQ_PORT_NUMBER_ENUM_DUMMY  = SNDRV_SEQ_CLIENT_DUMMY,
    ALSASEQ_PORT_NUMBER_ENUM_OSS    = SNDRV_SEQ_CLIENT_OSS,
} ALSASeqPortNumberEnum;

typedef enum /*< flags >*/
{
    ALSASEQ_PORT_TYPE_FLAG_SPECIFIC         = SNDRV_SEQ_PORT_TYPE_SYNTH,
    ALSASEQ_PORT_TYPE_FLAG_MIDI_GENERIC     = SNDRV_SEQ_PORT_TYPE_MIDI_GENERIC,
    ALSASEQ_PORT_TYPE_FLAG_MIDI_GM          = SNDRV_SEQ_PORT_TYPE_MIDI_GM,
    ALSASEQ_PORT_TYPE_FLAG_MIDI_GS          = SNDRV_SEQ_PORT_TYPE_MIDI_GS,
    ALSASEQ_PORT_TYPE_FLAG_MIDI_XG          = SNDRV_SEQ_PORT_TYPE_MIDI_XG,
    ALSASEQ_PORT_TYPE_FLAG_MIDI_MT32        = SNDRV_SEQ_PORT_TYPE_MIDI_MT32,
    ALSASEQ_PORT_TYPE_FLAG_MIDI_GM2         = SNDRV_SEQ_PORT_TYPE_MIDI_GM2,
    ALSASEQ_PORT_TYPE_FLAG_SYNTH            = SNDRV_SEQ_PORT_TYPE_SYNTH,
    ALSASEQ_PORT_TYPE_FLAG_DIRECT_SAMPLE    = SNDRV_SEQ_PORT_TYPE_DIRECT_SAMPLE,
    ALSASEQ_PORT_TYPE_FLAG_SAMPLE           = SNDRV_SEQ_PORT_TYPE_SAMPLE,
    ALSASEQ_PORT_TYPE_FLAG_HARDWARE         = SNDRV_SEQ_PORT_TYPE_HARDWARE,
    ALSASEQ_PORT_TYPE_FLAG_SOFTWARE         = SNDRV_SEQ_PORT_TYPE_SOFTWARE,
    ALSASEQ_PORT_TYPE_FLAG_SYNTHESIZER      = SNDRV_SEQ_PORT_TYPE_SYNTHESIZER,
    ALSASEQ_PORT_TYPE_FLAG_PORT             = SNDRV_SEQ_PORT_TYPE_PORT,
    ALSASEQ_PORT_TYPE_FLAG_APPLICATION      = SNDRV_SEQ_PORT_TYPE_APPLICATION,
} ALSASeqPortTypeFlag;

typedef enum /*< flags >*/
{
    ALSASEQ_PORT_CAP_FLAG_READ          = SNDRV_SEQ_PORT_CAP_READ,
    ALSASEQ_PORT_CAP_FLAG_WRITE         = SNDRV_SEQ_PORT_CAP_WRITE,
    ALSASEQ_PORT_CAP_FLAG_SYNC_READ     = SNDRV_SEQ_PORT_CAP_SYNC_READ,
    ALSASEQ_PORT_CAP_FLAG_SYNC_WRITE    = SNDRV_SEQ_PORT_CAP_SYNC_WRITE,
    ALSASEQ_PORT_CAP_FLAG_DUPLEX        = SNDRV_SEQ_PORT_CAP_DUPLEX,
    ALSASEQ_PORT_CAP_FLAG_SUBS_READ     = SNDRV_SEQ_PORT_CAP_SUBS_READ,
    ALSASEQ_PORT_CAP_FLAG_SUBS_WRITE    = SNDRV_SEQ_PORT_CAP_SUBS_WRITE,
    ALSASEQ_PORT_CAP_FLAG_NO_EXPORT     = SNDRV_SEQ_PORT_CAP_NO_EXPORT,
} ALSASeqPortCapFlag;

typedef enum /*< flags >*/
{
    ALSASEQ_PORT_COND_FLAG_GIVEN_PORT   = SNDRV_SEQ_PORT_FLG_GIVEN_PORT,
    ALSASEQ_PORT_COND_FLAG_TIMESTAMP    = SNDRV_SEQ_PORT_FLG_TIMESTAMP,
    ALSASEQ_PORT_COND_FLAG_TIME_REAL    = SNDRV_SEQ_PORT_FLG_TIME_REAL,
} ALSASeqPortCondFlag;

typedef enum {
    ALSASEQ_EVENT_TYPE_ENUM_SYSTEM          = SNDRV_SEQ_EVENT_SYSTEM,
    ALSASEQ_EVENT_TYPE_ENUM_RESULT          = SNDRV_SEQ_EVENT_RESULT,
    ALSASEQ_EVENT_TYPE_ENUM_NOTE            = SNDRV_SEQ_EVENT_NOTE,
    ALSASEQ_EVENT_TYPE_ENUM_NOTEON          = SNDRV_SEQ_EVENT_NOTEON,
    ALSASEQ_EVENT_TYPE_ENUM_NOTEOFF         = SNDRV_SEQ_EVENT_NOTEOFF,
    ALSASEQ_EVENT_TYPE_ENUM_KEYPRESS        = SNDRV_SEQ_EVENT_KEYPRESS,
    ALSASEQ_EVENT_TYPE_ENUM_CONTROLLER      = SNDRV_SEQ_EVENT_CONTROLLER,
    ALSASEQ_EVENT_TYPE_ENUM_PGMCHANGE       = SNDRV_SEQ_EVENT_PGMCHANGE,
    ALSASEQ_EVENT_TYPE_ENUM_CHANPRESS       = SNDRV_SEQ_EVENT_CHANPRESS,
    ALSASEQ_EVENT_TYPE_ENUM_PITCHBEND       = SNDRV_SEQ_EVENT_PITCHBEND,
    ALSASEQ_EVENT_TYPE_ENUM_CONTROL14       = SNDRV_SEQ_EVENT_CONTROL14,
    ALSASEQ_EVENT_TYPE_ENUM_NONREGPARAM     = SNDRV_SEQ_EVENT_NONREGPARAM,
    ALSASEQ_EVENT_TYPE_ENUM_REGPARAM        = SNDRV_SEQ_EVENT_REGPARAM,
    ALSASEQ_EVENT_TYPE_ENUM_SONGPOS         = SNDRV_SEQ_EVENT_SONGPOS,
    ALSASEQ_EVENT_TYPE_ENUM_SONGSEL         = SNDRV_SEQ_EVENT_SONGSEL,
    ALSASEQ_EVENT_TYPE_ENUM_QFRAME          = SNDRV_SEQ_EVENT_QFRAME,
    ALSASEQ_EVENT_TYPE_ENUM_TIMESIGN        = SNDRV_SEQ_EVENT_TIMESIGN,
    ALSASEQ_EVENT_TYPE_ENUM_KEYSIGN         = SNDRV_SEQ_EVENT_KEYSIGN,
    ALSASEQ_EVENT_TYPE_ENUM_START           = SNDRV_SEQ_EVENT_START,
    ALSASEQ_EVENT_TYPE_ENUM_CONTINUE        = SNDRV_SEQ_EVENT_CONTINUE,
    ALSASEQ_EVENT_TYPE_ENUM_STOP            = SNDRV_SEQ_EVENT_STOP,
    ALSASEQ_EVENT_TYPE_ENUM_SETPOS_TICK     = SNDRV_SEQ_EVENT_SETPOS_TICK,
    ALSASEQ_EVENT_TYPE_ENUM_SETPOS_TIME     = SNDRV_SEQ_EVENT_SETPOS_TIME,
    ALSASEQ_EVENT_TYPE_ENUM_TEMPO           = SNDRV_SEQ_EVENT_TEMPO,
    ALSASEQ_EVENT_TYPE_ENUM_CLOCK           = SNDRV_SEQ_EVENT_CLOCK,
    ALSASEQ_EVENT_TYPE_ENUM_TICK            = SNDRV_SEQ_EVENT_TICK,
    ALSASEQ_EVENT_TYPE_ENUM_QUEUE_SKEW      = SNDRV_SEQ_EVENT_QUEUE_SKEW,
    ALSASEQ_EVENT_TYPE_ENUM_TUNE_REQUEST    = SNDRV_SEQ_EVENT_TUNE_REQUEST,
    ALSASEQ_EVENT_TYPE_ENUM_RESET           = SNDRV_SEQ_EVENT_RESET,
    ALSASEQ_EVENT_TYPE_ENUM_SENSING         = SNDRV_SEQ_EVENT_SENSING,
    ALSASEQ_EVENT_TYPE_ENUM_ECHO            = SNDRV_SEQ_EVENT_ECHO,
    ALSASEQ_EVENT_TYPE_ENUM_OSS             = SNDRV_SEQ_EVENT_OSS,
    ALSASEQ_EVENT_TYPE_ENUM_CLIENT_START    = SNDRV_SEQ_EVENT_CLIENT_START,
    ALSASEQ_EVENT_TYPE_ENUM_CLIENT_EXIT     = SNDRV_SEQ_EVENT_CLIENT_EXIT,
    ALSASEQ_EVENT_TYPE_ENUM_CLIENT_CHANGE   = SNDRV_SEQ_EVENT_CLIENT_CHANGE,
    ALSASEQ_EVENT_TYPE_ENUM_PORT_START      = SNDRV_SEQ_EVENT_PORT_START,
    ALSASEQ_EVENT_TYPE_ENUM_PORT_EXIT       = SNDRV_SEQ_EVENT_PORT_EXIT,
    ALSASEQ_EVENT_TYPE_ENUM_PORT_CHANGE     = SNDRV_SEQ_EVENT_PORT_CHANGE,
    ALSASEQ_EVENT_TYPE_ENUM_PORT_SUBSCRIBED = SNDRV_SEQ_EVENT_PORT_SUBSCRIBED,
    ALSASEQ_EVENT_TYPE_ENUM_PORT_UNSUBSCRIBED   = SNDRV_SEQ_EVENT_PORT_UNSUBSCRIBED,
    ALSASEQ_EVENT_TYPE_ENUM_USR0            = SNDRV_SEQ_EVENT_USR0,
    ALSASEQ_EVENT_TYPE_ENUM_USR1            = SNDRV_SEQ_EVENT_USR1,
    ALSASEQ_EVENT_TYPE_ENUM_USR2            = SNDRV_SEQ_EVENT_USR2,
    ALSASEQ_EVENT_TYPE_ENUM_USR3            = SNDRV_SEQ_EVENT_USR3,
    ALSASEQ_EVENT_TYPE_ENUM_USR4            = SNDRV_SEQ_EVENT_USR4,
    ALSASEQ_EVENT_TYPE_ENUM_USR5            = SNDRV_SEQ_EVENT_USR5,
    ALSASEQ_EVENT_TYPE_ENUM_USR6            = SNDRV_SEQ_EVENT_USR6,
    ALSASEQ_EVENT_TYPE_ENUM_USR7            = SNDRV_SEQ_EVENT_USR7,
    ALSASEQ_EVENT_TYPE_ENUM_USR8            = SNDRV_SEQ_EVENT_USR8,
    ALSASEQ_EVENT_TYPE_ENUM_USR9            = SNDRV_SEQ_EVENT_USR9,
    ALSASEQ_EVENT_TYPE_ENUM_SYSEX           = SNDRV_SEQ_EVENT_SYSEX,
    ALSASEQ_EVENT_TYPE_ENUM_BOUNCE          = SNDRV_SEQ_EVENT_BOUNCE,
    ALSASEQ_EVENT_TYPE_ENUM_USR_VAR0        = SNDRV_SEQ_EVENT_USR_VAR0,
    ALSASEQ_EVENT_TYPE_ENUM_USR_VAR1        = SNDRV_SEQ_EVENT_USR_VAR1,
    ALSASEQ_EVENT_TYPE_ENUM_USR_VAR2        = SNDRV_SEQ_EVENT_USR_VAR2,
    ALSASEQ_EVENT_TYPE_ENUM_USR_VAR3        = SNDRV_SEQ_EVENT_USR_VAR3,
    ALSASEQ_EVENT_TYPE_ENUM_USR_VAR4        = SNDRV_SEQ_EVENT_USR_VAR4,
    ALSASEQ_EVENT_TYPE_ENUM_NONE            = SNDRV_SEQ_EVENT_NONE,
} ALSASeqEventTypeEnum;

#endif
